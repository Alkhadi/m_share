import 'package:flutter/material.dart';

import '../models/profile.dart';

/// A card widget that displays the core details of a [Profile].
///
/// Shows the avatar, name, title, contact details, website, wellbeing link and
/// a quick bank transfer button.  Optional callbacks allow hooking into
/// share/edit/bank tap events.
class ProfileCard extends StatelessWidget {
  const ProfileCard({
    super.key,
    required this.profile,
    this.onShareTap,
    this.onEditTap,
    this.onBankTap,
  });

  final Profile profile;
  final VoidCallback? onShareTap;
  final VoidCallback? onEditTap;
  final VoidCallback? onBankTap;

  @override
  Widget build(BuildContext context) {
    final theme = Theme.of(context);
    return Container(
      padding: const EdgeInsets.all(16),
      decoration: BoxDecoration(
        color: Colors.black.withValues(alpha: 0.25),
        borderRadius: BorderRadius.circular(24),
      ),
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          Row(
            children: [
              CircleAvatar(
                radius: 28,
                backgroundImage: AssetImage(profile.effectiveAvatar),
              ),
              const SizedBox(width: 12),
              Expanded(
                child: Column(
                  crossAxisAlignment: CrossAxisAlignment.start,
                  children: [
                    Text(
                      profile.effectiveDisplayName,
                      style: theme.textTheme.titleLarge?.copyWith(color: Colors.white),
                    ),
                    if ((profile.title ?? '').isNotEmpty)
                      Text(
                        profile.title!,
                        style: theme.textTheme.bodyMedium?.copyWith(color: Colors.white70),
                      ),
                  ],
                ),
              ),
              IconButton(
                icon: const Icon(Icons.share_rounded, color: Colors.white),
                onPressed: onShareTap,
              ),
              IconButton(
                icon: const Icon(Icons.edit_rounded, color: Colors.white),
                onPressed: onEditTap,
              ),
            ],
          ),
          const SizedBox(height: 12),
          if ((profile.address ?? '').isNotEmpty)
            _line(context, Icons.place_rounded, profile.address!),
          if ((profile.phone ?? '').isNotEmpty)
            _line(context, Icons.phone, profile.phone!),
          if ((profile.email ?? '').isNotEmpty)
            _line(context, Icons.email_outlined, profile.email!),
          if ((profile.website ?? '').isNotEmpty)
            _line(context, Icons.public_rounded, profile.website!),
          const SizedBox(height: 12),
          // Wellbeing section (editable web link) â€“ identical style to AC number bar
          if ((profile.wellbeingUrl ?? '').isNotEmpty)
            Container(
              width: double.infinity,
              padding: const EdgeInsets.symmetric(horizontal: 18, vertical: 14),
              decoration: BoxDecoration(
                color: Colors.black.withValues(alpha: 0.35),
                borderRadius: BorderRadius.circular(40),
                border: Border.all(
                  color: Colors.white.withValues(alpha: 0.2),
                ),
              ),
              child: Text(
                'Wellbeing: ${profile.wellbeingUrl}',
                style: theme.textTheme.titleMedium?.copyWith(color: Colors.white),
                textAlign: TextAlign.center,
              ),
            ),
          const SizedBox(height: 8),
          // Money (Bank) quick tile
          Align(
            alignment: Alignment.centerLeft,
            child: TextButton.icon(
              onPressed: onBankTap,
              icon: const Icon(Icons.account_balance_wallet_rounded, color: Colors.white),
              label: const Text(
                'Send/Receive Money (Bank)',
                style: TextStyle(color: Colors.white),
              ),
            ),
          ),
        ],
      ),
    );
  }

  Widget _line(BuildContext context, IconData icon, String text) {
    return Padding(
      padding: const EdgeInsets.only(top: 6.0),
      child: Row(
        children: [
          Icon(icon, color: Colors.white70),
          const SizedBox(width: 8),
          Expanded(
            child: Text(
              text,
              style: Theme.of(context)
                  .textTheme
                  .bodyMedium
                  ?.copyWith(color: Colors.white),
            ),
          ),
        ],
      ),
    );
  }
}